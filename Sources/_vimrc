" functions {@{
function! IsLinux()
    return (has('unix') && !has('macunix') && !has('win32unix'))
endfunction
function! IsWindows()
    return (has('win32') || has('win64'))
endfunction
function! IsMac()
    return has('macunix')
endfunction

function! MyDiff()
    if IsWindows()
        let opt = '-a --binary '
        if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
        if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
        let arg1 = v:fname_in
        if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
        let arg2 = v:fname_new
        if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
        let arg3 = v:fname_out
        if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
        if $VIMRUNTIME =~ ' '
            if &sh =~ '\<cmd'
                if empty(&shellxquote)
                    let l:shxq_sav = ''
                    set shellxquote&
                endif
                let cmd = '"' . $VIMRUNTIME . '\diff"'
            else
                let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
            endif
        else
            let cmd = $VIMRUNTIME . '\diff'
        endif
        silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
        if exists('l:shxq_sav')
            let &shellxquote=l:shxq_sav
        endif
    endif
endfunction
set diffexpr=MyDiff()

function! OpenFileLocation()
    if IsWindows()
        if ( expand("%") != "" )
            execute "!start explorer /select, %"
        else
            execute "!start explorer /select, %:p:h"
        endif
    endif
endfunction
" }@}

"""""""""""""""""""" custom configuration """"""""""""""""""""
"
" references: https://github.com/wsdjeg/vim-galore-zh_cn
"             https://github.com/yangyangwithgnu/use_vim_as_ide
"             https://github.com/spf13/spf13-vim
"             https://www.jianshu.com/p/923aec861af3(for mac)
"             https://zhuanlan.zhihu.com/vimrc
"             https://www.zhihu.com/question/47691414
"             http://www.jfh.com/jfperiodical/article/2157?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io?
"             https://vim-adventures.com/
"             macvim: (brew cask install macvim)
"             https://www.jianshu.com/p/923aec861af3?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation

" General Config {@{
if IsWindows()
    source $VIMRUNTIME/vimrc_example.vim
    source $VIMRUNTIME/mswin.vim
    behave mswin
endif

" dos和unix格式：https://blog.csdn.net/lovelirui/article/details/6282940
" 如果你使用windows上的vim，并且希望你的会话文件可以同时被windows版本的vim和UNIX版本的vim共同使用的话，
" 在‘sessionoptions’中加入‘slash’和‘unix’，前者把文件名中的’\'替换为’/'，后者会把会话文件的换行符保存成unix格式
set sessionoptions +=unix,slash
" }@}


" System Config {@{
" =右边不可有空格，否则不能识别
" automatic full screen at startup
if IsWindows()
    autocmd GUIEnter * simalt ~x
    if has('gui_running') && has('libcall')
        let g:MyVimLib = $VIMRUNTIME.'/gvimfullscreen.dll'
        function! ToggleFullScreen()
            call libcallnr(g:MyVimLib, "ToggleFullScreen", 0)
        endfunction

        "全屏，Alt+Enter
        map <A-Enter> <Esc>:call ToggleFullScreen()<CR>

        let g:VimAlpha = 240
        function! SetAlpha(alpha)
            let g:VimAlpha = g:VimAlpha + a:alpha
            if g:VimAlpha < 180
                let g:VimAlpha = 180
            endif
            if g:VimAlpha > 255
                let g:VimAlpha = 255
            endif
            "call libcall(g:MyVimLib, 'SetAlpha', g:VimAlpha)
            call libcallnr("vimtweak.dll", "SetAlpha", g:VimAlpha)
        endfunction

        "透明，Shift+Y
        nmap <s-y> <Esc>:call SetAlpha(3)<CR>
        "透明，Shift+T
        nmap <s-t> <Esc>:call SetAlpha(-3)<CR>

        let g:VimTopMost = 0
        function! SwitchVimTopMostMode()
            if g:VimTopMost == 0
                let g:VimTopMost = 1
            else
                let g:VimTopMost = 0
            endif
            call libcall(g:MyVimLib, 'EnableTopMost', g:VimTopMost)
        endfunction

        "顶层，Shift+R
        nmap <s-r> <Esc>:call SwitchVimTopMostMode()<CR>
    endif
endif

" support utf-8
if has("multi_byte")
    " 设置打开文件的编码格式
    set fileencoding=utf-8
    set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
    set encoding=utf-8
    set termencoding=utf-8
    set formatoptions+=mM
    set fencs=utf-8,gbk,gb2312,gb18030
    if v:lang =~? '^/(zh/)/|/(ja/)/|/(ko/)'
        set ambiwidth=double
    endif
    " Vim 在与屏幕/键盘交互时使用的编码(取决于实际的终端的设定)
    set langmenu=zh_CN.UTF-8
    " 设置中文帮助
    set helplang=cn
    if has("win32")
        source $VIMRUNTIME/delmenu.vim
        source $VIMRUNTIME/menu.vim
        language messages zh_CN.utf-8
    endif
else
    echoerr "sorry, this version of (g)vim was not compiled with +multi_byte"
endif

" 让配置变更立即生效
autocmd BufWritePost $MYVIMRC source $MYVIMRC

" 改变光标样式
set guicursor=i:ver1

" 不在当前目录生成备份文件
"set undodir = $VIM/undodir/
set noundofile
set nobackup
set noswapfile

" 显示不可见字符
"set list
"set listchars=eol:┐,trail:┐,tab:>-,nbsp:.,precedes:«,extends:»

" 打开文件的同时，自动切换当前路径
" autocmd BufEnter * silent! lcd %:p:h:gs/ /\\ /

" 开启omni completion
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd FileType java set omnifunc=javacomplete#Complete
"autocmd FileType lua set omnifunc=luacomplete#Complete
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
if has("autocmd") && exists("+omnifunc")
  autocmd Filetype *
        \ if &omnifunc == "" |
        \ setlocal omnifunc=syntaxcomplete#Complete |
        \ endif
endif
" }@}


" Config Modules {@{
if IsWindows()
  if filereadable(expand('$VIM/_vimrc.key'))
    source $VIM/_vimrc.key
  endif
  if filereadable(expand('$VIM/_vimrc.editor'))
    source $VIM/_vimrc.editor
  endif
  if filereadable(expand('$VIM/_vimrc.plugin'))
    source $VIM/_vimrc.plugin
  endif
else
  if filereadable(expand('~/.vimrc.key'))
    source ~/.vimrc.key
  endif
  if filereadable(expand('~/.vimrc.editor'))
    source ~/.vimrc.editor
  endif
  if filereadable(expand('~/.vimrc.plugin'))
    source ~/.vimrc.plugin
  endif
endif
" }@}
